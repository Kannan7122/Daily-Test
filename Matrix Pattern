Program :


The program must accept an integer matrix of size NxN as the input. The program must print the
desired pattern as shown in the Example Input/Output section.
Boundary Condition(s):
1 <= N <= 100
1 <= Each element in the first row of the matrix <= N
Input Format:
The first line contains the integer N.
The next N lines contain N integers separated by space(s).
Output Format:
The first N lines containing the desired pattern as shown in the Example Input/Output section.
Example Input/Output 1:
Input:
3
3 1 2
8 9 10
4 2 6
Output:
4 3 8 
2 1 9 
6 2 10
Explanation:
The first element in the 1st
row of the input matrix is 3. So the 3rd
row elements are printed as the
1st column of the output matrix.
4
2
6
The second element in the 1st
row of the input matrix is 1. So the 1st
row elements are printed as
the 2nd column of the output matrix.
4 3
2 1
6 2
The third element in the 1st
row of the input matrix is 2. So the 2nd
row elements are printed as the
3rd column of the output matrix.
4 3 8
2 1 9
6 2 10



Code :

#include<stdio.h>
#include<stdlib.h>

int main()
{
    int n;
    scanf("%d",&n);
    int arr[n][n];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            scanf("%d ",&arr[i][j]);
        }
    }
    int arr2[n][n];
    int g=0,h=0;
    for(int k=0;k<n;k++)
    {
        int x=arr[0][k];
        for(int i=x-1;i<n;i++)
        {
            h=0;
            for(int j=0;j<n;j++)
            {
                arr2[g][h]=arr[i][j];
                printf("%d ",arr2[g][h]);
                h++;
            }
            g++;
            printf("\n");
            break;
        }
    }
    printf("%d %d",g,h);
    printf("\n\n");
    int res[n][n];
    int x=0,y=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            res[x][y]=arr2[j][i];
            printf("%d ",arr2[j][i]);
            y++;
        }
        printf("\n");
        x++;
    }
}
