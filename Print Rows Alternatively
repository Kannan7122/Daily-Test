Program :


The program must accept two integer matrices of size RxC as the input. The program must print
the first row in the first matrix, the second row in the second matrix, the third row in the first
matrix, the fourth row in the second matix and so on.
Boundary Condition(s):
2 <= R, C <= 100
Input Format:
The first line contains two integers R and C separated by a space.
The next 2*R lines contain C integers separated by space(s).
Output Format:
The first R lines contain C integers separated by a space.
Example Input/Output 1:
Input:
4 5
1 0 5 12 5
4 8 2 6 2
7 6 9 5 6
10 2 3 4 7
4 10 5 5 0
2 9 7 1 2
12 5 6 0 4
7 8 12 4 8
Output:
1 0 5 12 5 
2 9 7 1 2 
7 6 9 5 6 
7 8 12 4 8
Explanation:
The 1st
row elements in the first matrix are printed as.
1 0 5 12 5
The 2nd
row elements in the second matrix are printed as.
2 9 7 1 2 
The 3rd
row elements in the first matrix are printed as.
7 6 9 5 6 
The 4th
row elements in the second matrix are printed as.
7 8 12 4 8





Code :

#include<stdio.h>
#include<stdlib.h>

int main()
{
    int r,c;
    scanf("%d %d\n",&r,&c);
    int arr1[r][c],arr2[r][c];
    for(int i=0;i<r;i++) {
        for(int j=0;j<c;j++) {
            scanf("%d ",&arr1[i][j]);
        }
    }
    for(int i=0;i<r;i++) {
        for(int j=0;j<c;j++) {
            scanf("%d ",&arr2[i][j]);
        }
    }
    
    
    for(int i=0;i<r;i++) {
        for(int j=0;j<c;j++) {
            if(i%2==0) {
                printf("%d ",arr1[i][j]);
            }
            else {
                printf("%d ",arr2[i][j]);
            }
        }
        printf("\n");
    }
}
